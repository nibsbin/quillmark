name: Publish Python Package

on:
  push:
    tags:
      - 'py-v[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+'
  workflow_dispatch:

permissions:
  contents: read

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUST_BACKTRACE: short

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.10', '3.11', '3.12']
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: pyquillmark

      - name: Setup uv
        uses: astral-sh/setup-uv@v3

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        working-directory: pyquillmark
        run: |
          uv venv
          uv pip install maturin pytest

      - name: Build extension
        working-directory: pyquillmark
        run: uv run maturin develop

      - name: Run tests
        working-directory: pyquillmark
        run: uv run pytest

  build-wheels:
    needs: [test]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: pyquillmark

      - name: Setup uv
        uses: astral-sh/setup-uv@v3

      - name: Build wheels
        working-directory: pyquillmark
        run: |
          uv venv
          uv pip install maturin
          uv run maturin build --release --interpreter python3.10 python3.11 python3.12

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: pyquillmark/target/wheels/*.whl

  publish:
    needs: [test, build-wheels]
    runs-on: ubuntu-latest
    environment: Publish
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          merge-multiple: true
          path: dist/

      - name: Setup uv
        uses: astral-sh/setup-uv@v3

      - name: Publish to PyPI
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          uv venv
          uv pip install maturin
          uv run maturin upload dist/*.whl

      - name: Publish summary
        if: success()
        run: echo "✓ pyquillmark published to PyPI"

  summary:
    needs: [publish]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Overall summary
        run: |
          echo "## Publishing Summary"
          echo ""
          
          if [ "${{ needs.publish.result }}" == "success" ]; then
            echo "✓ pyquillmark published to PyPI"
          elif [ "${{ needs.publish.result }}" == "skipped" ]; then
            echo "⊘ Publishing skipped"
          else
            echo "✗ Publishing failed"
            exit 1
          fi
