name: Publish Python Package
on:
  push:
    tags:
      - 'py-v[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+'
  workflow_dispatch:

permissions:
  contents: read

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUST_BACKTRACE: short

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      
      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: quillmark-python
      
      - name: Setup uv
        uses: astral-sh/setup-uv@v3
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies and run tests
        run: |
          uv venv
          uv pip install maturin pytest
          cd quillmark-python
          uv run python -m maturin develop
          uv run pytest

  build-wheels:
    needs: [test]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      
      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: quillmark-python
      
      - name: Setup uv
        uses: astral-sh/setup-uv@v3
      
      - name: Build wheels
        run: |
          uv venv
          uv pip install maturin
          cd quillmark-python
          uv run python -m maturin build --release --interpreter python3.10 python3.11 python3.12
      
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: quillmark-python/target/wheels/*.whl

  publish:
    needs: [test, build-wheels]
    runs-on: ubuntu-latest
    environment: Publish
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          merge-multiple: true
          path: dist/
      
      - name: Setup uv
        uses: astral-sh/setup-uv@v3
      
      - name: Publish to PyPI
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          uv venv
          uv pip install maturin
          uv run python -m maturin upload dist/*.whl
      
      - name: Publish summary
        if: success()
        run: echo "âœ“ Package published to PyPI"