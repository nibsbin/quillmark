name: Publish WASM Package
on:
  push:
    tags:
      - 'wasm-v[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+'
  workflow_dispatch:

permissions:
  contents: read

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUST_BACKTRACE: short

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown
      
      - name: Rust cache
        uses: Swatinem/rust-cache@v2
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install wasm-pack
        uses: taiki-e/install-action@v2
        with:
          tool: wasm-pack
      
      - name: Check WASM build
        run: cargo check --package quillmark-wasm --target wasm32-unknown-unknown --locked
      
      - name: Build WASM packages
        run: ./scripts/build-wasm.sh
      
      - name: Install npm dependencies
        working-directory: quillmark-wasm
        run: npm install
      
      - name: Run npm tests
        working-directory: quillmark-wasm
        run: npm test

  publish:
    needs: [test]
    runs-on: ubuntu-latest
    environment: Publish
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown

      - name: Rust cache
        uses: Swatinem/rust-cache@v2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Install wasm-pack
        uses: taiki-e/install-action@v2
        with:
          tool: wasm-pack

      - name: Extract version from workspace
        id: version
        run: |
          VERSION=$(cargo metadata --format-version=1 --no-deps | jq -r '.packages[] | select(.name == "quillmark-wasm") | .version')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Publishing WASM version: $VERSION"

      - name: Build WASM packages
        run: ./scripts/build-wasm.sh

      - name: Publish @quillmark-test/wasm
        working-directory: pkg/bundler
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish summary
        if: success()
        run: echo "âœ“ @quillmark-test/wasm v${{ steps.version.outputs.version }} published to npm"
